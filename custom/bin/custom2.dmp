
bin/custom2.elf:     file format elf32-littlearm


Disassembly of section .bootcode:

20000c00 <Custom>:
_sboot():
20000c00:	e28f0001 	add	r0, pc, #1
20000c04:	e12fff10 	bx	r0
20000c08:	480b      	ldr	r0, [pc, #44]	; (20000c38 <return_to_DPC+0x4>)
20000c0a:	6802      	ldr	r2, [r0, #0]
20000c0c:	2a00      	cmp	r2, #0
20000c0e:	d40c      	bmi.n	20000c2a <skipcopy>
20000c10:	3201      	adds	r2, #1
20000c12:	6002      	str	r2, [r0, #0]
20000c14:	2a01      	cmp	r2, #1
20000c16:	d108      	bne.n	20000c2a <skipcopy>
20000c18:	4808      	ldr	r0, [pc, #32]	; (20000c3c <return_to_DPC+0x8>)
20000c1a:	4909      	ldr	r1, [pc, #36]	; (20000c40 <return_to_DPC+0xc>)
20000c1c:	4a09      	ldr	r2, [pc, #36]	; (20000c44 <return_to_DPC+0x10>)
20000c1e:	1a89      	subs	r1, r1, r2

20000c20 <copyloop>:
copyloop():
20000c20:	3904      	subs	r1, #4
20000c22:	d402      	bmi.n	20000c2a <skipcopy>
20000c24:	5843      	ldr	r3, [r0, r1]
20000c26:	5053      	str	r3, [r2, r1]
20000c28:	d1fa      	bne.n	20000c20 <copyloop>

20000c2a <skipcopy>:
skipcopy():
20000c2a:	b500      	push	{lr}
20000c2c:	4806      	ldr	r0, [pc, #24]	; (20000c48 <return_to_DPC+0x14>)
20000c2e:	4686      	mov	lr, r0
20000c30:	4806      	ldr	r0, [pc, #24]	; (20000c4c <return_to_DPC+0x18>)
20000c32:	4700      	bx	r0

20000c34 <return_to_DPC>:
return_to_DPC():
20000c34:	bc02      	pop	{r1}
20000c36:	4708      	bx	r1
20000c38:	10000024 	.word	0x10000024
20000c3c:	20001494 	.word	0x20001494
20000c40:	10001c30 	.word	0x10001c30
20000c44:	10001c00 	.word	0x10001c00
20000c48:	20000c35 	.word	0x20000c35
20000c4c:	20000e29 	.word	0x20000e29

Disassembly of section .text:

20000c80 <my_memcpy>:
my_memcpy():
/home/steve/relocateBB/custom/main.c:177
#define    scorepointer(a)  fetcheraddr[(a)+56]
#define    Hmval(a)  fetcheraddr[(a)+58]
#define    Hmval74(a)  fetcheraddr[(a)+66]

void my_memcpy(unsigned char* destination, unsigned char* source, int offset, int count)
{ 
20000c80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
20000c82:	9301      	str	r3, [sp, #4]
/home/steve/relocateBB/custom/main.c:179
        int i; //saves a few bytes
        for(i=0;i<count;i++)
20000c84:	2300      	movs	r3, #0
/home/steve/relocateBB/custom/main.c:180
                destination[(i+offset)&255] = source[i]&mask;
20000c86:	4f07      	ldr	r7, [pc, #28]	; (20000ca4 <my_memcpy+0x24>)
/home/steve/relocateBB/custom/main.c:179 (discriminator 1)
        for(i=0;i<count;i++)
20000c88:	9c01      	ldr	r4, [sp, #4]
20000c8a:	42a3      	cmp	r3, r4
20000c8c:	db00      	blt.n	20000c90 <my_memcpy+0x10>
/home/steve/relocateBB/custom/main.c:181
} 
20000c8e:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
/home/steve/relocateBB/custom/main.c:180 (discriminator 3)
                destination[(i+offset)&255] = source[i]&mask;
20000c90:	25ff      	movs	r5, #255	; 0xff
20000c92:	18d4      	adds	r4, r2, r3
20000c94:	5cce      	ldrb	r6, [r1, r3]
20000c96:	402c      	ands	r4, r5
20000c98:	683d      	ldr	r5, [r7, #0]
/home/steve/relocateBB/custom/main.c:179 (discriminator 3)
        for(i=0;i<count;i++)
20000c9a:	3301      	adds	r3, #1
/home/steve/relocateBB/custom/main.c:180 (discriminator 3)
                destination[(i+offset)&255] = source[i]&mask;
20000c9c:	4035      	ands	r5, r6
20000c9e:	5505      	strb	r5, [r0, r4]
/home/steve/relocateBB/custom/main.c:179 (discriminator 3)
        for(i=0;i<count;i++)
20000ca0:	e7f2      	b.n	20000c88 <my_memcpy+0x8>
20000ca2:	46c0      	nop			; (mov r8, r8)
20000ca4:	10001c30 	.word	0x10001c30

20000ca8 <my_memset>:
my_memset():
/home/steve/relocateBB/custom/main.c:186

void my_memset(unsigned char* destination, int fill_value, int count)
{
        int i; //saves a few bytes
        for (i=0;i<count;i++)
20000ca8:	2300      	movs	r3, #0
/home/steve/relocateBB/custom/main.c:186 (discriminator 1)
20000caa:	4293      	cmp	r3, r2
20000cac:	db00      	blt.n	20000cb0 <my_memset+0x8>
/home/steve/relocateBB/custom/main.c:188
                destination[i]=fill_value;
}
20000cae:	4770      	bx	lr
/home/steve/relocateBB/custom/main.c:187 (discriminator 3)
                destination[i]=fill_value;
20000cb0:	54c1      	strb	r1, [r0, r3]
/home/steve/relocateBB/custom/main.c:186 (discriminator 3)
        for (i=0;i<count;i++)
20000cb2:	3301      	adds	r3, #1
20000cb4:	e7f9      	b.n	20000caa <my_memset+0x2>

20000cb6 <reverse>:
reverse():
/home/steve/relocateBB/custom/main.c:191

void reverse(int i, int j, unsigned char* x)
{ 
20000cb6:	b510      	push	{r4, lr}
/home/steve/relocateBB/custom/main.c:193
        int t;
        while (i < j) 
20000cb8:	4288      	cmp	r0, r1
20000cba:	db00      	blt.n	20000cbe <reverse+0x8>
/home/steve/relocateBB/custom/main.c:199
        {
              t = x[i]; x[i] = x[j]; x[j] = t;
              i++;
              j--;
        }
}
20000cbc:	bd10      	pop	{r4, pc}
/home/steve/relocateBB/custom/main.c:195
              t = x[i]; x[i] = x[j]; x[j] = t;
20000cbe:	5c13      	ldrb	r3, [r2, r0]
20000cc0:	5c54      	ldrb	r4, [r2, r1]
20000cc2:	5414      	strb	r4, [r2, r0]
20000cc4:	5453      	strb	r3, [r2, r1]
/home/steve/relocateBB/custom/main.c:196
              i++;
20000cc6:	3001      	adds	r0, #1
/home/steve/relocateBB/custom/main.c:197
              j--;
20000cc8:	3901      	subs	r1, #1
20000cca:	e7f5      	b.n	20000cb8 <reverse+0x2>

20000ccc <memscroll>:
memscroll():
/home/steve/relocateBB/custom/main.c:202

void memscroll(unsigned char* qmemory, unsigned char offset)
{
20000ccc:	b570      	push	{r4, r5, r6, lr}
20000cce:	0004      	movs	r4, r0
20000cd0:	000d      	movs	r5, r1
/home/steve/relocateBB/custom/main.c:204
        // the classic "shift N elements through reversal" algorithm
        reverse(0,offset-1,qmemory);
20000cd2:	0002      	movs	r2, r0
20000cd4:	3901      	subs	r1, #1
20000cd6:	2000      	movs	r0, #0
20000cd8:	f7ff ffed 	bl	20000cb6 <reverse>
/home/steve/relocateBB/custom/main.c:205
        reverse(offset,255,qmemory);
20000cdc:	0028      	movs	r0, r5
20000cde:	0022      	movs	r2, r4
20000ce0:	21ff      	movs	r1, #255	; 0xff
20000ce2:	f7ff ffe8 	bl	20000cb6 <reverse>
/home/steve/relocateBB/custom/main.c:206
        reverse(0,255,qmemory);
20000ce6:	0022      	movs	r2, r4
20000ce8:	21ff      	movs	r1, #255	; 0xff
20000cea:	2000      	movs	r0, #0
20000cec:	f7ff ffe3 	bl	20000cb6 <reverse>
/home/steve/relocateBB/custom/main.c:207
}
20000cf0:	bd70      	pop	{r4, r5, r6, pc}
	...

20000cf4 <get32bitdff>:
get32bitdff():
/home/steve/relocateBB/custom/main.c:211

unsigned int get32bitdff(int offset)
{
  return((dffrachi(offset)<<8)+dffraclo(offset));
20000cf4:	4b05      	ldr	r3, [pc, #20]	; (20000d0c <get32bitdff+0x18>)
20000cf6:	685b      	ldr	r3, [r3, #4]
20000cf8:	181b      	adds	r3, r3, r0
20000cfa:	001a      	movs	r2, r3
20000cfc:	322e      	adds	r2, #46	; 0x2e
20000cfe:	7810      	ldrb	r0, [r2, #0]
20000d00:	3307      	adds	r3, #7
20000d02:	7fdb      	ldrb	r3, [r3, #31]
20000d04:	0200      	lsls	r0, r0, #8
20000d06:	18c0      	adds	r0, r0, r3
/home/steve/relocateBB/custom/main.c:212
}
20000d08:	4770      	bx	lr
20000d0a:	46c0      	nop			; (mov r8, r8)
20000d0c:	10001c30 	.word	0x10001c30

20000d10 <get32bitdf>:
get32bitdf():
/home/steve/relocateBB/custom/main.c:216

unsigned int get32bitdf(int offset)
{
  return((dfhigh(offset)<<8)+dflow(offset));
20000d10:	4b03      	ldr	r3, [pc, #12]	; (20000d20 <get32bitdf+0x10>)
20000d12:	685b      	ldr	r3, [r3, #4]
20000d14:	181b      	adds	r3, r3, r0
20000d16:	7f98      	ldrb	r0, [r3, #30]
20000d18:	7d9b      	ldrb	r3, [r3, #22]
20000d1a:	0200      	lsls	r0, r0, #8
20000d1c:	18c0      	adds	r0, r0, r3
/home/steve/relocateBB/custom/main.c:217
}
20000d1e:	4770      	bx	lr
20000d20:	10001c30 	.word	0x10001c30

20000d24 <shiftnumbers>:
shiftnumbers():
/home/steve/relocateBB/custom/main.c:220

void shiftnumbers(int xreg)
{
20000d24:	b510      	push	{r4, lr}
/home/steve/relocateBB/custom/main.c:221
  while (xreg!=maxsprites-1)
20000d26:	4b05      	ldr	r3, [pc, #20]	; (20000d3c <shiftnumbers+0x18>)
/home/steve/relocateBB/custom/main.c:223
  {
    myGfxIndex[xreg]=myGfxIndex[xreg+1];
20000d28:	1c41      	adds	r1, r0, #1
20000d2a:	7a1a      	ldrb	r2, [r3, #8]
20000d2c:	4b04      	ldr	r3, [pc, #16]	; (20000d40 <shiftnumbers+0x1c>)
20000d2e:	3a01      	subs	r2, #1
20000d30:	1a12      	subs	r2, r2, r0
20000d32:	1859      	adds	r1, r3, r1
20000d34:	1818      	adds	r0, r3, r0
20000d36:	f000 faeb 	bl	20001310 <memmove>
/home/steve/relocateBB/custom/main.c:227
    xreg++;
  }
  
}
20000d3a:	bd10      	pop	{r4, pc}
20000d3c:	10001c30 	.word	0x10001c30
20000d40:	10001c00 	.word	0x10001c00

20000d44 <checkswap>:
checkswap():
/home/steve/relocateBB/custom/main.c:236
/*   if (((a+b)&255)<b) return 0; */
/*   return a; */
/* } */

int checkswap(int a, int b)
{
20000d44:	b510      	push	{r4, lr}
/home/steve/relocateBB/custom/main.c:241
  signed int temp1;
  char s1,s2;

  /* s1=checkwrap(RIOT[player1y+a],RIOT[player1height+a]); */
  if ((RIOT[player1y+a]+RIOT[player1height+a]&255) < RIOT[player1height+a]) {
20000d46:	4b10      	ldr	r3, [pc, #64]	; (20000d88 <checkswap+0x44>)
20000d48:	68da      	ldr	r2, [r3, #12]
20000d4a:	1810      	adds	r0, r2, r0
20000d4c:	7d43      	ldrb	r3, [r0, #21]
20000d4e:	3002      	adds	r0, #2
20000d50:	7fc4      	ldrb	r4, [r0, #31]
20000d52:	1918      	adds	r0, r3, r4
20000d54:	b2c0      	uxtb	r0, r0
20000d56:	4284      	cmp	r4, r0
20000d58:	d900      	bls.n	20000d5c <checkswap+0x18>
/home/steve/relocateBB/custom/main.c:242
	  s1 = 0;
20000d5a:	2300      	movs	r3, #0
/home/steve/relocateBB/custom/main.c:248
  } else {
	  s1 = RIOT[player1y+a];
  }

  /* s2=checkwrap(RIOT[player1y+b],RIOT[player1height+b]); */
  if ((RIOT[player1y+b]+RIOT[player1height+b]&255) < RIOT[player1height+b]) {
20000d5c:	1852      	adds	r2, r2, r1
20000d5e:	7d51      	ldrb	r1, [r2, #21]
20000d60:	3202      	adds	r2, #2
20000d62:	7fd2      	ldrb	r2, [r2, #31]
20000d64:	1888      	adds	r0, r1, r2
20000d66:	b2c0      	uxtb	r0, r0
20000d68:	4282      	cmp	r2, r0
20000d6a:	d900      	bls.n	20000d6e <checkswap+0x2a>
/home/steve/relocateBB/custom/main.c:249
	  s2 = 0;
20000d6c:	2100      	movs	r1, #0
/home/steve/relocateBB/custom/main.c:261
  { // larger is higher
    if ((temp1-=5)>0)
    {// not overlapping
      if (temp1>RIOT[player1height+b])
	return SKIP;
      else return OVERLAP;
20000d6e:	2001      	movs	r0, #1
/home/steve/relocateBB/custom/main.c:254
  temp1=s1-s2;
20000d70:	1a5b      	subs	r3, r3, r1
/home/steve/relocateBB/custom/main.c:255
  if (temp1>0)
20000d72:	2b00      	cmp	r3, #0
20000d74:	dd06      	ble.n	20000d84 <checkswap+0x40>
/home/steve/relocateBB/custom/main.c:257
    if ((temp1-=5)>0)
20000d76:	3b05      	subs	r3, #5
20000d78:	2b00      	cmp	r3, #0
20000d7a:	dd03      	ble.n	20000d84 <checkswap+0x40>
/home/steve/relocateBB/custom/main.c:259
      if (temp1>RIOT[player1height+b])
20000d7c:	17d0      	asrs	r0, r2, #31
20000d7e:	0fd9      	lsrs	r1, r3, #31
20000d80:	429a      	cmp	r2, r3
20000d82:	4148      	adcs	r0, r1
/home/steve/relocateBB/custom/main.c:277
      if (temp1>RIOT[player1height+b])
        return NOOVERLAP;
      else return OVERLAP;
    }
  }
}
20000d84:	bd10      	pop	{r4, pc}
20000d86:	46c0      	nop			; (mov r8, r8)
20000d88:	10001c00 	.word	0x10001c00

20000d8c <copynybble>:
copynybble():
/home/steve/relocateBB/custom/main.c:280

void copynybble(unsigned char num)
{
20000d8c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/home/steve/relocateBB/custom/main.c:284
    int i;
    unsigned char *destination;
    unsigned char *source;
    destination=queue+(scorepointer(1)<<8)+scorepointer(0)+((temp5++)<<3);
20000d8e:	4a14      	ldr	r2, [pc, #80]	; (20000de0 <copynybble+0x54>)
20000d90:	4f14      	ldr	r7, [pc, #80]	; (20000de4 <copynybble+0x58>)
20000d92:	6851      	ldr	r1, [r2, #4]
/home/steve/relocateBB/custom/main.c:280
{
20000d94:	9001      	str	r0, [sp, #4]
/home/steve/relocateBB/custom/main.c:284
    destination=queue+(scorepointer(1)<<8)+scorepointer(0)+((temp5++)<<3);
20000d96:	000b      	movs	r3, r1
20000d98:	3339      	adds	r3, #57	; 0x39
20000d9a:	781d      	ldrb	r5, [r3, #0]
20000d9c:	3b01      	subs	r3, #1
20000d9e:	781e      	ldrb	r6, [r3, #0]
20000da0:	68d3      	ldr	r3, [r2, #12]
20000da2:	693c      	ldr	r4, [r7, #16]
20000da4:	1c58      	adds	r0, r3, #1
20000da6:	60d0      	str	r0, [r2, #12]
/home/steve/relocateBB/custom/main.c:285
    source=flashdata+(scoregraphics(1)<<8)+scoregraphics(0)+((num&0x0F)<<3);
20000da8:	697a      	ldr	r2, [r7, #20]
20000daa:	2778      	movs	r7, #120	; 0x78
20000dac:	9801      	ldr	r0, [sp, #4]
/home/steve/relocateBB/custom/main.c:284
    destination=queue+(scorepointer(1)<<8)+scorepointer(0)+((temp5++)<<3);
20000dae:	00db      	lsls	r3, r3, #3
/home/steve/relocateBB/custom/main.c:285
    source=flashdata+(scoregraphics(1)<<8)+scoregraphics(0)+((num&0x0F)<<3);
20000db0:	00c0      	lsls	r0, r0, #3
20000db2:	4038      	ands	r0, r7
20000db4:	000f      	movs	r7, r1
20000db6:	3137      	adds	r1, #55	; 0x37
20000db8:	7809      	ldrb	r1, [r1, #0]
20000dba:	3736      	adds	r7, #54	; 0x36
20000dbc:	783f      	ldrb	r7, [r7, #0]
20000dbe:	0209      	lsls	r1, r1, #8
20000dc0:	4339      	orrs	r1, r7
20000dc2:	1840      	adds	r0, r0, r1
/home/steve/relocateBB/custom/main.c:284
    destination=queue+(scorepointer(1)<<8)+scorepointer(0)+((temp5++)<<3);
20000dc4:	022d      	lsls	r5, r5, #8
20000dc6:	199b      	adds	r3, r3, r6
20000dc8:	1811      	adds	r1, r2, r0
20000dca:	195b      	adds	r3, r3, r5
20000dcc:	3a08      	subs	r2, #8
20000dce:	18e4      	adds	r4, r4, r3
20000dd0:	1812      	adds	r2, r2, r0
/home/steve/relocateBB/custom/main.c:287 (discriminator 3)
        for(i=0;i<8;i++)
                destination[i] = source[7-i];
20000dd2:	79cb      	ldrb	r3, [r1, #7]
/home/steve/relocateBB/custom/main.c:286 (discriminator 3)
        for(i=0;i<8;i++)
20000dd4:	3901      	subs	r1, #1
/home/steve/relocateBB/custom/main.c:287 (discriminator 3)
                destination[i] = source[7-i];
20000dd6:	7023      	strb	r3, [r4, #0]
/home/steve/relocateBB/custom/main.c:286 (discriminator 3)
        for(i=0;i<8;i++)
20000dd8:	3401      	adds	r4, #1
20000dda:	4291      	cmp	r1, r2
20000ddc:	d1f9      	bne.n	20000dd2 <copynybble+0x46>
/home/steve/relocateBB/custom/main.c:289

}
20000dde:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
20000de0:	10001c30 	.word	0x10001c30
20000de4:	10001c00 	.word	0x10001c00

20000de8 <on_off_flip>:
on_off_flip():
/home/steve/relocateBB/custom/main.c:293

void on_off_flip(unsigned int loc, unsigned int fnmask)
{
  switch(C_function[0]&3)
20000de8:	2203      	movs	r2, #3
20000dea:	4b0d      	ldr	r3, [pc, #52]	; (20000e20 <on_off_flip+0x38>)
20000dec:	699b      	ldr	r3, [r3, #24]
20000dee:	781b      	ldrb	r3, [r3, #0]
20000df0:	4013      	ands	r3, r2
20000df2:	2b01      	cmp	r3, #1
20000df4:	d009      	beq.n	20000e0a <on_off_flip+0x22>
20000df6:	2b02      	cmp	r3, #2
20000df8:	d00c      	beq.n	20000e14 <on_off_flip+0x2c>
20000dfa:	2b00      	cmp	r3, #0
20000dfc:	d104      	bne.n	20000e08 <on_off_flip+0x20>
/home/steve/relocateBB/custom/main.c:296
  {
    case 0://on
      pfpixel[loc]|=fnmask;
20000dfe:	4b09      	ldr	r3, [pc, #36]	; (20000e24 <on_off_flip+0x3c>)
20000e00:	691a      	ldr	r2, [r3, #16]
20000e02:	5c13      	ldrb	r3, [r2, r0]
20000e04:	430b      	orrs	r3, r1
/home/steve/relocateBB/custom/main.c:302
      return;
    case 1://off
      pfpixel[loc]&=~fnmask;
      return;
    case 2://flip
      pfpixel[loc]^=fnmask;
20000e06:	5413      	strb	r3, [r2, r0]
/home/steve/relocateBB/custom/main.c:307
      return;
    default://reserved (for what?)
      break;
  }
}
20000e08:	4770      	bx	lr
/home/steve/relocateBB/custom/main.c:299
      pfpixel[loc]&=~fnmask;
20000e0a:	4b06      	ldr	r3, [pc, #24]	; (20000e24 <on_off_flip+0x3c>)
20000e0c:	691a      	ldr	r2, [r3, #16]
20000e0e:	5c13      	ldrb	r3, [r2, r0]
20000e10:	438b      	bics	r3, r1
20000e12:	e7f8      	b.n	20000e06 <on_off_flip+0x1e>
/home/steve/relocateBB/custom/main.c:302
      pfpixel[loc]^=fnmask;
20000e14:	4b03      	ldr	r3, [pc, #12]	; (20000e24 <on_off_flip+0x3c>)
20000e16:	691a      	ldr	r2, [r3, #16]
20000e18:	5c13      	ldrb	r3, [r2, r0]
20000e1a:	404b      	eors	r3, r1
20000e1c:	e7f3      	b.n	20000e06 <on_off_flip+0x1e>
20000e1e:	46c0      	nop			; (mov r8, r8)
20000e20:	10001c00 	.word	0x10001c00
20000e24:	10001c30 	.word	0x10001c30

20000e28 <main>:
main():
/home/steve/relocateBB/custom/main.c:311

// main() is what gets called when you store 0xFF into DPC+ register CALLFUNCTION in your 6507 code.
int main()
{
20000e28:	b5f0      	push	{r4, r5, r6, r7, lr}
20000e2a:	b091      	sub	sp, #68	; 0x44
/home/steve/relocateBB/custom/main.c:320
  // moving the the scope of these variables saved a *lot* of space. 
  int temp2;
  int temp3;
  int Gfxindex;
  unsigned char *HMdiv=(unsigned char *)(0x20000c00+0x1000);
  const unsigned char setbyte[32]=
20000e2c:	2220      	movs	r2, #32
20000e2e:	49c9      	ldr	r1, [pc, #804]	; (20001154 <main+0x32c>)
20000e30:	a808      	add	r0, sp, #32
20000e32:	f000 fac5 	bl	200013c0 <memcpy>
/home/steve/relocateBB/custom/main.c:326
	{0x80,0x40,0x20,0x10,0x08,0x04,0x02,0x01,
	 0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80,
	 0x80,0x40,0x20,0x10,0x08,0x04,0x02,0x01,
	 0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};

  fetcheraddr=flashdata+fetcher_address_table[0];
20000e36:	4cc8      	ldr	r4, [pc, #800]	; (20001158 <main+0x330>)
20000e38:	4ec8      	ldr	r6, [pc, #800]	; (2000115c <main+0x334>)
20000e3a:	69e3      	ldr	r3, [r4, #28]
20000e3c:	881a      	ldrh	r2, [r3, #0]
20000e3e:	6963      	ldr	r3, [r4, #20]
20000e40:	189b      	adds	r3, r3, r2
20000e42:	2203      	movs	r2, #3
20000e44:	6073      	str	r3, [r6, #4]
/home/steve/relocateBB/custom/main.c:329

  // preindex these to save some space...
  unsigned char C_function1=C_function[1];
20000e46:	69a3      	ldr	r3, [r4, #24]
20000e48:	9302      	str	r3, [sp, #8]
20000e4a:	785b      	ldrb	r3, [r3, #1]
20000e4c:	9301      	str	r3, [sp, #4]
/home/steve/relocateBB/custom/main.c:330
  unsigned char C_function2=C_function[2];
20000e4e:	9b02      	ldr	r3, [sp, #8]
20000e50:	789d      	ldrb	r5, [r3, #2]
/home/steve/relocateBB/custom/main.c:331
  unsigned char C_function3=C_function[3];
20000e52:	78df      	ldrb	r7, [r3, #3]
/home/steve/relocateBB/custom/main.c:333

  switch (C_function[0]&0xFC)
20000e54:	781b      	ldrb	r3, [r3, #0]
20000e56:	4393      	bics	r3, r2
20000e58:	2b14      	cmp	r3, #20
20000e5a:	d100      	bne.n	20000e5e <main+0x36>
20000e5c:	e0ef      	b.n	2000103e <main+0x216>
20000e5e:	d900      	bls.n	20000e62 <main+0x3a>
20000e60:	e0a2      	b.n	20000fa8 <main+0x180>
20000e62:	2b0c      	cmp	r3, #12
20000e64:	d100      	bne.n	20000e68 <main+0x40>
20000e66:	e0de      	b.n	20001026 <main+0x1fe>
20000e68:	d900      	bls.n	20000e6c <main+0x44>
20000e6a:	e093      	b.n	20000f94 <main+0x16c>
20000e6c:	2b04      	cmp	r3, #4
20000e6e:	d100      	bne.n	20000e72 <main+0x4a>
20000e70:	e0b5      	b.n	20000fde <main+0x1b6>
20000e72:	2b08      	cmp	r3, #8
20000e74:	d100      	bne.n	20000e78 <main+0x50>
20000e76:	e0d2      	b.n	2000101e <main+0x1f6>
/home/steve/relocateBB/custom/main.c:418
  //passed the sprite max as a parameter instead
  maxsprites=C_function1;

  for (i=0;i<maxsprites;i++)
  {
    myGfxIndex[i]=spritesort[i];
20000e78:	0027      	movs	r7, r4
/home/steve/relocateBB/custom/main.c:414
  maxsprites=C_function1;
20000e7a:	9b01      	ldr	r3, [sp, #4]
/home/steve/relocateBB/custom/main.c:418
    myGfxIndex[i]=spritesort[i];
20000e7c:	3720      	adds	r7, #32
20000e7e:	001a      	movs	r2, r3
20000e80:	0039      	movs	r1, r7
20000e82:	0020      	movs	r0, r4
/home/steve/relocateBB/custom/main.c:414
  maxsprites=C_function1;
20000e84:	7233      	strb	r3, [r6, #8]
/home/steve/relocateBB/custom/main.c:418
    myGfxIndex[i]=spritesort[i];
20000e86:	f000 fa9b 	bl	200013c0 <memcpy>
/home/steve/relocateBB/custom/main.c:421
  }
//loop
  temp3=maxsprites-1;
20000e8a:	9b01      	ldr	r3, [sp, #4]
20000e8c:	3b01      	subs	r3, #1
20000e8e:	9302      	str	r3, [sp, #8]
/home/steve/relocateBB/custom/main.c:423
  temp2=maxsprites-2;
 while (temp2>=0)
20000e90:	9b01      	ldr	r3, [sp, #4]
20000e92:	1e9d      	subs	r5, r3, #2
20000e94:	197f      	adds	r7, r7, r5
20000e96:	2d00      	cmp	r5, #0
20000e98:	db00      	blt.n	20000e9c <main+0x74>
20000e9a:	e13d      	b.n	20001118 <main+0x2f0>
/home/steve/relocateBB/custom/main.c:444
  i=spritesort[temp2+1];
  spritesort[temp2+1]=spritesort[temp2];
  spritesort[temp2]=i;
  temp2--;
 }
  for (i=0;i<maxsprites;i++)
20000e9c:	2300      	movs	r3, #0
/home/steve/relocateBB/custom/main.c:444 (discriminator 1)
20000e9e:	7a31      	ldrb	r1, [r6, #8]
/home/steve/relocateBB/custom/main.c:445 (discriminator 1)
    RIOT[SpriteGfxIndex+i]=myGfxIndex[i];
20000ea0:	68e2      	ldr	r2, [r4, #12]
/home/steve/relocateBB/custom/main.c:444 (discriminator 1)
  for (i=0;i<maxsprites;i++)
20000ea2:	4299      	cmp	r1, r3
20000ea4:	dd00      	ble.n	20000ea8 <main+0x80>
20000ea6:	e151      	b.n	2000114c <main+0x324>
/home/steve/relocateBB/custom/main.c:446
  RIOT[spritedisplay]=temp3;
20000ea8:	9b02      	ldr	r3, [sp, #8]
/home/steve/relocateBB/custom/main.c:449
  // fetcher setup
  //my_memset(queue+(dfhigh(3)<<8)+dflow(3),0,192);
  my_memset(queue+get32bitdf(3),0,192);
20000eaa:	2003      	movs	r0, #3
/home/steve/relocateBB/custom/main.c:446
  RIOT[spritedisplay]=temp3;
20000eac:	7253      	strb	r3, [r2, #9]
/home/steve/relocateBB/custom/main.c:449
  my_memset(queue+get32bitdf(3),0,192);
20000eae:	f7ff ff2f 	bl	20000d10 <get32bitdf>
20000eb2:	6925      	ldr	r5, [r4, #16]
20000eb4:	22c0      	movs	r2, #192	; 0xc0
20000eb6:	2100      	movs	r1, #0
20000eb8:	1828      	adds	r0, r5, r0
20000eba:	f7ff fef5 	bl	20000ca8 <my_memset>
/home/steve/relocateBB/custom/main.c:452

  //my_memset(queue+(dfhigh(1)<<8)+dflow(1),RIOT[COLUM1],192); // clear multiplexed sprites and fill colors
  my_memset(queue+get32bitdf(1),RIOT[COLUM1],192); // clear multiplexed sprites and fill colors
20000ebe:	2001      	movs	r0, #1
20000ec0:	f7ff ff26 	bl	20000d10 <get32bitdf>
20000ec4:	68e3      	ldr	r3, [r4, #12]
20000ec6:	6925      	ldr	r5, [r4, #16]
20000ec8:	3337      	adds	r3, #55	; 0x37
20000eca:	7819      	ldrb	r1, [r3, #0]
20000ecc:	22c0      	movs	r2, #192	; 0xc0
20000ece:	1828      	adds	r0, r5, r0
20000ed0:	f7ff feea 	bl	20000ca8 <my_memset>
/home/steve/relocateBB/custom/main.c:454
  //my_memset(queue+(dfhigh(0)<<8)+dflow(0)-1,RIOT[COLUM0],193); // fill COLUM0 colors
  my_memset(queue+get32bitdf(0)-1,RIOT[COLUM0],193); // fill COLUM0 colors
20000ed4:	2000      	movs	r0, #0
20000ed6:	f7ff ff1b 	bl	20000d10 <get32bitdf>
20000eda:	68e3      	ldr	r3, [r4, #12]
20000edc:	6925      	ldr	r5, [r4, #16]
20000ede:	3336      	adds	r3, #54	; 0x36
20000ee0:	3801      	subs	r0, #1
20000ee2:	7819      	ldrb	r1, [r3, #0]
20000ee4:	22c1      	movs	r2, #193	; 0xc1
20000ee6:	1828      	adds	r0, r5, r0
20000ee8:	f7ff fede 	bl	20000ca8 <my_memset>
/home/steve/relocateBB/custom/main.c:458

  // fill color from player0, wrapping if necessary...
  //my_memcpy(queue+(dfhigh(0)<<8)+dflow(0),
  my_memcpy(queue+get32bitdf(0),
20000eec:	2000      	movs	r0, #0
20000eee:	f7ff ff0f 	bl	20000d10 <get32bitdf>
/home/steve/relocateBB/custom/main.c:459
            flashdata+(RIOT[player0color+1]<<8)+RIOT[player0color], RIOT[player0y],
20000ef2:	68e1      	ldr	r1, [r4, #12]
/home/steve/relocateBB/custom/main.c:458
  my_memcpy(queue+get32bitdf(0),
20000ef4:	6925      	ldr	r5, [r4, #16]
20000ef6:	7d0a      	ldrb	r2, [r1, #20]
/home/steve/relocateBB/custom/main.c:459
            flashdata+(RIOT[player0color+1]<<8)+RIOT[player0color], RIOT[player0y],
20000ef8:	7f8f      	ldrb	r7, [r1, #30]
/home/steve/relocateBB/custom/main.c:460
            RIOT[player0height]);
20000efa:	1c4b      	adds	r3, r1, #1
/home/steve/relocateBB/custom/main.c:459
            flashdata+(RIOT[player0color+1]<<8)+RIOT[player0color], RIOT[player0y],
20000efc:	7fc9      	ldrb	r1, [r1, #31]
/home/steve/relocateBB/custom/main.c:458
  my_memcpy(queue+get32bitdf(0),
20000efe:	7fdb      	ldrb	r3, [r3, #31]
/home/steve/relocateBB/custom/main.c:459
            flashdata+(RIOT[player0color+1]<<8)+RIOT[player0color], RIOT[player0y],
20000f00:	0209      	lsls	r1, r1, #8
20000f02:	4339      	orrs	r1, r7
20000f04:	6967      	ldr	r7, [r4, #20]
/home/steve/relocateBB/custom/main.c:458
  my_memcpy(queue+get32bitdf(0),
20000f06:	1828      	adds	r0, r5, r0
/home/steve/relocateBB/custom/main.c:459
            flashdata+(RIOT[player0color+1]<<8)+RIOT[player0color], RIOT[player0y],
20000f08:	1879      	adds	r1, r7, r1
/home/steve/relocateBB/custom/main.c:458
  my_memcpy(queue+get32bitdf(0),
20000f0a:	f7ff feb9 	bl	20000c80 <my_memcpy>
/home/steve/relocateBB/custom/main.c:463

  //my_memcpy(queue+(dfhigh(2)<<8)+dflow(2),
  my_memcpy(queue+get32bitdf(2),
20000f0e:	2002      	movs	r0, #2
20000f10:	f7ff fefe 	bl	20000d10 <get32bitdf>
/home/steve/relocateBB/custom/main.c:464
            flashdata+(RIOT[player0pointerhi]<<8)+RIOT[player0pointerlo], 0,
20000f14:	68e2      	ldr	r2, [r4, #12]
/home/steve/relocateBB/custom/main.c:463
  my_memcpy(queue+get32bitdf(2),
20000f16:	6925      	ldr	r5, [r4, #16]
/home/steve/relocateBB/custom/main.c:464
            flashdata+(RIOT[player0pointerhi]<<8)+RIOT[player0pointerlo], 0,
20000f18:	0011      	movs	r1, r2
/home/steve/relocateBB/custom/main.c:465
            RIOT[player0height]);
20000f1a:	1c53      	adds	r3, r2, #1
/home/steve/relocateBB/custom/main.c:464
            flashdata+(RIOT[player0pointerhi]<<8)+RIOT[player0pointerlo], 0,
20000f1c:	3239      	adds	r2, #57	; 0x39
20000f1e:	7812      	ldrb	r2, [r2, #0]
20000f20:	3138      	adds	r1, #56	; 0x38
20000f22:	7809      	ldrb	r1, [r1, #0]
20000f24:	0212      	lsls	r2, r2, #8
20000f26:	430a      	orrs	r2, r1
20000f28:	6961      	ldr	r1, [r4, #20]
/home/steve/relocateBB/custom/main.c:463
  my_memcpy(queue+get32bitdf(2),
20000f2a:	7fdb      	ldrb	r3, [r3, #31]
/home/steve/relocateBB/custom/main.c:464
            flashdata+(RIOT[player0pointerhi]<<8)+RIOT[player0pointerlo], 0,
20000f2c:	1889      	adds	r1, r1, r2
/home/steve/relocateBB/custom/main.c:463
  my_memcpy(queue+get32bitdf(2),
20000f2e:	1828      	adds	r0, r5, r0
20000f30:	2200      	movs	r2, #0
20000f32:	f7ff fea5 	bl	20000c80 <my_memcpy>
/home/steve/relocateBB/custom/main.c:467

  count=0;
20000f36:	2300      	movs	r3, #0
20000f38:	6173      	str	r3, [r6, #20]
/home/steve/relocateBB/custom/main.c:468
  temp4=0;
20000f3a:	61b3      	str	r3, [r6, #24]
/home/steve/relocateBB/custom/main.c:469
  while (temp4 != 511)
20000f3c:	4987      	ldr	r1, [pc, #540]	; (2000115c <main+0x334>)
/home/steve/relocateBB/custom/main.c:479
  //  {

 // masking: NUSIZ bit 7=on/off, NUSIZ 6=L/R
 // appears to happen @ 0x99-0x9F
      mask = 0xFF;
      if (RIOT[_NUSIZ1+Gfxindex]>127)
20000f3e:	4d86      	ldr	r5, [pc, #536]	; (20001158 <main+0x330>)
/home/steve/relocateBB/custom/main.c:469
  while (temp4 != 511)
20000f40:	698b      	ldr	r3, [r1, #24]
20000f42:	4a87      	ldr	r2, [pc, #540]	; (20001160 <main+0x338>)
/home/steve/relocateBB/custom/main.c:479
      if (RIOT[_NUSIZ1+Gfxindex]>127)
20000f44:	68ec      	ldr	r4, [r5, #12]
/home/steve/relocateBB/custom/main.c:469
  while (temp4 != 511)
20000f46:	4293      	cmp	r3, r2
20000f48:	d000      	beq.n	20000f4c <main+0x124>
20000f4a:	e10d      	b.n	20001168 <main+0x340>
/home/steve/relocateBB/custom/main.c:523
    queue[get32bitdf(5)+count]=kernello(HMdiv[RIOT[player1x+Gfxindex]]);
    //queue[(dfhigh(6)<<8)+dflow(6)+count]=kernelhi(HMdiv[RIOT[player1x+Gfxindex]]);
    queue[get32bitdf(6)+count]=kernelhi(HMdiv[RIOT[player1x+Gfxindex]]);
    count++;
  }
  temp5=1;
20000f4c:	2301      	movs	r3, #1
/home/steve/relocateBB/custom/main.c:524
    copynybble(RIOT[score]);//+i
20000f4e:	3433      	adds	r4, #51	; 0x33
20000f50:	7820      	ldrb	r0, [r4, #0]
/home/steve/relocateBB/custom/main.c:523
  temp5=1;
20000f52:	60cb      	str	r3, [r1, #12]
/home/steve/relocateBB/custom/main.c:524
    copynybble(RIOT[score]);//+i
20000f54:	f7ff ff1a 	bl	20000d8c <copynybble>
/home/steve/relocateBB/custom/main.c:525
    copynybble(RIOT[score] >> 4);
20000f58:	68eb      	ldr	r3, [r5, #12]
20000f5a:	3333      	adds	r3, #51	; 0x33
20000f5c:	7818      	ldrb	r0, [r3, #0]
20000f5e:	0900      	lsrs	r0, r0, #4
20000f60:	f7ff ff14 	bl	20000d8c <copynybble>
/home/steve/relocateBB/custom/main.c:526
    copynybble(RIOT[score2]);
20000f64:	68eb      	ldr	r3, [r5, #12]
20000f66:	3334      	adds	r3, #52	; 0x34
20000f68:	7818      	ldrb	r0, [r3, #0]
20000f6a:	f7ff ff0f 	bl	20000d8c <copynybble>
/home/steve/relocateBB/custom/main.c:527
    copynybble(RIOT[score2] >> 4);
20000f6e:	68eb      	ldr	r3, [r5, #12]
20000f70:	3334      	adds	r3, #52	; 0x34
20000f72:	7818      	ldrb	r0, [r3, #0]
20000f74:	0900      	lsrs	r0, r0, #4
20000f76:	f7ff ff09 	bl	20000d8c <copynybble>
/home/steve/relocateBB/custom/main.c:528
    copynybble(RIOT[score3]);
20000f7a:	68eb      	ldr	r3, [r5, #12]
20000f7c:	3335      	adds	r3, #53	; 0x35
20000f7e:	7818      	ldrb	r0, [r3, #0]
20000f80:	f7ff ff04 	bl	20000d8c <copynybble>
/home/steve/relocateBB/custom/main.c:529
    copynybble(RIOT[score3] >> 4);
20000f84:	68eb      	ldr	r3, [r5, #12]
20000f86:	3335      	adds	r3, #53	; 0x35
20000f88:	7818      	ldrb	r0, [r3, #0]
20000f8a:	0900      	lsrs	r0, r0, #4
20000f8c:	f7ff fefe 	bl	20000d8c <copynybble>
/home/steve/relocateBB/custom/main.c:532

  return 0;
}
20000f90:	2000      	movs	r0, #0
20000f92:	e02d      	b.n	20000ff0 <main+0x1c8>
/home/steve/relocateBB/custom/main.c:333
  switch (C_function[0]&0xFC)
20000f94:	2b10      	cmp	r3, #16
20000f96:	d000      	beq.n	20000f9a <main+0x172>
20000f98:	e76e      	b.n	20000e78 <main+0x50>
/home/steve/relocateBB/custom/main.c:361
      my_memset(RIOT+player1pointerlo,0,4096-0x1a8-player1pointerlo);
20000f9a:	2100      	movs	r1, #0
20000f9c:	68e0      	ldr	r0, [r4, #12]
20000f9e:	4a71      	ldr	r2, [pc, #452]	; (20001164 <main+0x33c>)
20000fa0:	303a      	adds	r0, #58	; 0x3a
/home/steve/relocateBB/custom/main.c:399
      my_memset(queue+get32bitdff(0),C_function1,1024);
20000fa2:	f7ff fe81 	bl	20000ca8 <my_memset>
/home/steve/relocateBB/custom/main.c:400
      return;
20000fa6:	e023      	b.n	20000ff0 <main+0x1c8>
/home/steve/relocateBB/custom/main.c:333
  switch (C_function[0]&0xFC)
20000fa8:	2b1c      	cmp	r3, #28
20000faa:	d100      	bne.n	20000fae <main+0x186>
20000fac:	e09c      	b.n	200010e8 <main+0x2c0>
/home/steve/relocateBB/custom/main.c:404
      for(temp3=C_function2;temp3<C_function3;temp3++)
20000fae:	9503      	str	r5, [sp, #12]
/home/steve/relocateBB/custom/main.c:333
  switch (C_function[0]&0xFC)
20000fb0:	2b20      	cmp	r3, #32
20000fb2:	d100      	bne.n	20000fb6 <main+0x18e>
20000fb4:	e0ac      	b.n	20001110 <main+0x2e8>
20000fb6:	2b18      	cmp	r3, #24
20000fb8:	d000      	beq.n	20000fbc <main+0x194>
20000fba:	e75d      	b.n	20000e78 <main+0x50>
/home/steve/relocateBB/custom/main.c:393
      pfpixel=queue+get32bitdff(C_function1>>3); // physical addy of xpos (pf)
20000fbc:	9b01      	ldr	r3, [sp, #4]
20000fbe:	6924      	ldr	r4, [r4, #16]
20000fc0:	08d8      	lsrs	r0, r3, #3
20000fc2:	f7ff fe97 	bl	20000cf4 <get32bitdff>
/home/steve/relocateBB/custom/main.c:394
      C_function[3]=(!(pfpixel[C_function2]&setbyte[C_function1]));
20000fc6:	9901      	ldr	r1, [sp, #4]
/home/steve/relocateBB/custom/main.c:393
      pfpixel=queue+get32bitdff(C_function1>>3); // physical addy of xpos (pf)
20000fc8:	1824      	adds	r4, r4, r0
20000fca:	6134      	str	r4, [r6, #16]
/home/steve/relocateBB/custom/main.c:394
      C_function[3]=(!(pfpixel[C_function2]&setbyte[C_function1]));
20000fcc:	ab08      	add	r3, sp, #32
20000fce:	5d62      	ldrb	r2, [r4, r5]
20000fd0:	5c5b      	ldrb	r3, [r3, r1]
20000fd2:	4013      	ands	r3, r2
20000fd4:	425a      	negs	r2, r3
20000fd6:	4153      	adcs	r3, r2
20000fd8:	9a02      	ldr	r2, [sp, #8]
20000fda:	70d3      	strb	r3, [r2, #3]
/home/steve/relocateBB/custom/main.c:395
      return;
20000fdc:	e008      	b.n	20000ff0 <main+0x1c8>
/home/steve/relocateBB/custom/main.c:337
      pfpixel=queue+get32bitdff(C_function3>>3); // physical addy of xpos (pf)
20000fde:	08f8      	lsrs	r0, r7, #3
20000fe0:	f7ff fe88 	bl	20000cf4 <get32bitdff>
20000fe4:	6924      	ldr	r4, [r4, #16]
20000fe6:	1824      	adds	r4, r4, r0
20000fe8:	6134      	str	r4, [r6, #16]
/home/steve/relocateBB/custom/main.c:338 (discriminator 1)
      for (i=C_function2;i<=C_function1;++i)
20000fea:	9b01      	ldr	r3, [sp, #4]
20000fec:	42ab      	cmp	r3, r5
20000fee:	da01      	bge.n	20000ff4 <main+0x1cc>
/home/steve/relocateBB/custom/main.c:532
}
20000ff0:	b011      	add	sp, #68	; 0x44
20000ff2:	bdf0      	pop	{r4, r5, r6, r7, pc}
/home/steve/relocateBB/custom/main.c:340 (discriminator 3)
        on_off_flip(i,setbyte[C_function3]);
20000ff4:	ab08      	add	r3, sp, #32
20000ff6:	0028      	movs	r0, r5
20000ff8:	5dd9      	ldrb	r1, [r3, r7]
20000ffa:	f7ff fef5 	bl	20000de8 <on_off_flip>
/home/steve/relocateBB/custom/main.c:338 (discriminator 3)
      for (i=C_function2;i<=C_function1;++i)
20000ffe:	3501      	adds	r5, #1
20001000:	e7f3      	b.n	20000fea <main+0x1c2>
/home/steve/relocateBB/custom/main.c:348 (discriminator 3)
        pfpixel=queue+get32bitdff(i>>3); // physical addy of xpos (pf)
20001002:	6923      	ldr	r3, [r4, #16]
20001004:	10f8      	asrs	r0, r7, #3
20001006:	9302      	str	r3, [sp, #8]
20001008:	f7ff fe74 	bl	20000cf4 <get32bitdff>
2000100c:	9b02      	ldr	r3, [sp, #8]
2000100e:	1818      	adds	r0, r3, r0
/home/steve/relocateBB/custom/main.c:349 (discriminator 3)
        on_off_flip(C_function2,setbyte[i]);
20001010:	ab08      	add	r3, sp, #32
20001012:	5dd9      	ldrb	r1, [r3, r7]
/home/steve/relocateBB/custom/main.c:348 (discriminator 3)
        pfpixel=queue+get32bitdff(i>>3); // physical addy of xpos (pf)
20001014:	6130      	str	r0, [r6, #16]
/home/steve/relocateBB/custom/main.c:349 (discriminator 3)
        on_off_flip(C_function2,setbyte[i]);
20001016:	0028      	movs	r0, r5
20001018:	f7ff fee6 	bl	20000de8 <on_off_flip>
/home/steve/relocateBB/custom/main.c:346 (discriminator 3)
      for (i=C_function3;i<=C_function1;++i)
2000101c:	3701      	adds	r7, #1
/home/steve/relocateBB/custom/main.c:346 (discriminator 1)
2000101e:	9b01      	ldr	r3, [sp, #4]
20001020:	42bb      	cmp	r3, r7
20001022:	daee      	bge.n	20001002 <main+0x1da>
20001024:	e7e4      	b.n	20000ff0 <main+0x1c8>
/home/steve/relocateBB/custom/main.c:355
      pfpixel=queue+get32bitdff(C_function3>>3); // physical addy of xpos (pf)
20001026:	08f8      	lsrs	r0, r7, #3
20001028:	f7ff fe64 	bl	20000cf4 <get32bitdff>
2000102c:	6924      	ldr	r4, [r4, #16]
/home/steve/relocateBB/custom/main.c:356
      on_off_flip(C_function2,setbyte[C_function3]);
2000102e:	ab08      	add	r3, sp, #32
/home/steve/relocateBB/custom/main.c:355
      pfpixel=queue+get32bitdff(C_function3>>3); // physical addy of xpos (pf)
20001030:	1824      	adds	r4, r4, r0
/home/steve/relocateBB/custom/main.c:356
      on_off_flip(C_function2,setbyte[C_function3]);
20001032:	5dd9      	ldrb	r1, [r3, r7]
20001034:	0028      	movs	r0, r5
/home/steve/relocateBB/custom/main.c:355
      pfpixel=queue+get32bitdff(C_function3>>3); // physical addy of xpos (pf)
20001036:	6134      	str	r4, [r6, #16]
/home/steve/relocateBB/custom/main.c:356
      on_off_flip(C_function2,setbyte[C_function3]);
20001038:	f7ff fed6 	bl	20000de8 <on_off_flip>
/home/steve/relocateBB/custom/main.c:357
      return;
2000103c:	e7d8      	b.n	20000ff0 <main+0x1c8>
/home/steve/relocateBB/custom/main.c:369
      C_function[3]=0;
2000103e:	2300      	movs	r3, #0
20001040:	9a02      	ldr	r2, [sp, #8]
20001042:	70d3      	strb	r3, [r2, #3]
/home/steve/relocateBB/custom/main.c:371
      for (i=RIOT[player0y+C_function2];i<RIOT[player0y+C_function2]+RIOT[player0height+C_function2];++i) 
20001044:	68e2      	ldr	r2, [r4, #12]
20001046:	1957      	adds	r7, r2, r5
20001048:	1c7b      	adds	r3, r7, #1
2000104a:	7d3e      	ldrb	r6, [r7, #20]
2000104c:	7fdb      	ldrb	r3, [r3, #31]
/home/steve/relocateBB/custom/main.c:379
            temp2=((flashdata[(RIOT[player0pointerhi+C_function2*2]<<8)+RIOT[player0pointerlo+C_function2*2]+i-RIOT[player0y+C_function2]])<<7)
2000104e:	006d      	lsls	r5, r5, #1
/home/steve/relocateBB/custom/main.c:371
      for (i=RIOT[player0y+C_function2];i<RIOT[player0y+C_function2]+RIOT[player0height+C_function2];++i) 
20001050:	199b      	adds	r3, r3, r6
20001052:	9306      	str	r3, [sp, #24]
/home/steve/relocateBB/custom/main.c:379
            temp2=((flashdata[(RIOT[player0pointerhi+C_function2*2]<<8)+RIOT[player0pointerlo+C_function2*2]+i-RIOT[player0y+C_function2]])<<7)
20001054:	6963      	ldr	r3, [r4, #20]
20001056:	469c      	mov	ip, r3
20001058:	002b      	movs	r3, r5
2000105a:	3339      	adds	r3, #57	; 0x39
2000105c:	18d3      	adds	r3, r2, r3
2000105e:	3538      	adds	r5, #56	; 0x38
20001060:	9302      	str	r3, [sp, #8]
20001062:	1953      	adds	r3, r2, r5
20001064:	9303      	str	r3, [sp, #12]
/home/steve/relocateBB/custom/main.c:380
                & ((flashdata[(RIOT[player0pointerhi+C_function1*2]<<8)+RIOT[player0pointerlo+C_function1*2]+i-RIOT[player0y+C_function1]])<<temp3);
20001066:	9b01      	ldr	r3, [sp, #4]
20001068:	005b      	lsls	r3, r3, #1
2000106a:	0019      	movs	r1, r3
2000106c:	3139      	adds	r1, #57	; 0x39
2000106e:	1851      	adds	r1, r2, r1
20001070:	9104      	str	r1, [sp, #16]
/home/steve/relocateBB/custom/main.c:371
      for (i=RIOT[player0y+C_function2];i<RIOT[player0y+C_function2]+RIOT[player0height+C_function2];++i) 
20001072:	0031      	movs	r1, r6
/home/steve/relocateBB/custom/main.c:380
                & ((flashdata[(RIOT[player0pointerhi+C_function1*2]<<8)+RIOT[player0pointerlo+C_function1*2]+i-RIOT[player0y+C_function1]])<<temp3);
20001074:	3338      	adds	r3, #56	; 0x38
20001076:	18d3      	adds	r3, r2, r3
20001078:	9305      	str	r3, [sp, #20]
/home/steve/relocateBB/custom/main.c:373
        if ((i>=RIOT[player0y+C_function1]) && (i<RIOT[player0y+C_function1]+RIOT[player0height+C_function1]))
2000107a:	9b01      	ldr	r3, [sp, #4]
2000107c:	18d2      	adds	r2, r2, r3
2000107e:	1c53      	adds	r3, r2, #1
20001080:	9307      	str	r3, [sp, #28]
/home/steve/relocateBB/custom/main.c:371 (discriminator 1)
      for (i=RIOT[player0y+C_function2];i<RIOT[player0y+C_function2]+RIOT[player0height+C_function2];++i) 
20001082:	9b06      	ldr	r3, [sp, #24]
20001084:	428b      	cmp	r3, r1
20001086:	ddb3      	ble.n	20000ff0 <main+0x1c8>
/home/steve/relocateBB/custom/main.c:373
        if ((i>=RIOT[player0y+C_function1]) && (i<RIOT[player0y+C_function1]+RIOT[player0height+C_function1]))
20001088:	7d15      	ldrb	r5, [r2, #20]
2000108a:	428d      	cmp	r5, r1
2000108c:	dc2a      	bgt.n	200010e4 <main+0x2bc>
/home/steve/relocateBB/custom/main.c:373 (discriminator 1)
2000108e:	9b07      	ldr	r3, [sp, #28]
20001090:	7fdb      	ldrb	r3, [r3, #31]
20001092:	195b      	adds	r3, r3, r5
20001094:	428b      	cmp	r3, r1
20001096:	dd25      	ble.n	200010e4 <main+0x2bc>
/home/steve/relocateBB/custom/main.c:376
          temp3=RIOT[player0x+C_function2]-RIOT[player0x+C_function1]+7; //-7 to +7 -> 0 to 14
20001098:	7ab8      	ldrb	r0, [r7, #10]
2000109a:	7a93      	ldrb	r3, [r2, #10]
2000109c:	1ac0      	subs	r0, r0, r3
2000109e:	3007      	adds	r0, #7
/home/steve/relocateBB/custom/main.c:377
          if (temp3<15)
200010a0:	280e      	cmp	r0, #14
200010a2:	dc1f      	bgt.n	200010e4 <main+0x2bc>
/home/steve/relocateBB/custom/main.c:379
            temp2=((flashdata[(RIOT[player0pointerhi+C_function2*2]<<8)+RIOT[player0pointerlo+C_function2*2]+i-RIOT[player0y+C_function2]])<<7)
200010a4:	9b02      	ldr	r3, [sp, #8]
200010a6:	9c03      	ldr	r4, [sp, #12]
200010a8:	781b      	ldrb	r3, [r3, #0]
200010aa:	7824      	ldrb	r4, [r4, #0]
200010ac:	021b      	lsls	r3, r3, #8
200010ae:	191b      	adds	r3, r3, r4
200010b0:	185b      	adds	r3, r3, r1
200010b2:	1b9b      	subs	r3, r3, r6
200010b4:	4463      	add	r3, ip
200010b6:	781b      	ldrb	r3, [r3, #0]
200010b8:	9301      	str	r3, [sp, #4]
/home/steve/relocateBB/custom/main.c:380
                & ((flashdata[(RIOT[player0pointerhi+C_function1*2]<<8)+RIOT[player0pointerlo+C_function1*2]+i-RIOT[player0y+C_function1]])<<temp3);
200010ba:	9b04      	ldr	r3, [sp, #16]
200010bc:	781b      	ldrb	r3, [r3, #0]
200010be:	021b      	lsls	r3, r3, #8
200010c0:	001c      	movs	r4, r3
200010c2:	9b05      	ldr	r3, [sp, #20]
200010c4:	781b      	ldrb	r3, [r3, #0]
200010c6:	18e3      	adds	r3, r4, r3
200010c8:	185b      	adds	r3, r3, r1
200010ca:	1b5b      	subs	r3, r3, r5
200010cc:	4463      	add	r3, ip
200010ce:	781b      	ldrb	r3, [r3, #0]
/home/steve/relocateBB/custom/main.c:379
            temp2=((flashdata[(RIOT[player0pointerhi+C_function2*2]<<8)+RIOT[player0pointerlo+C_function2*2]+i-RIOT[player0y+C_function2]])<<7)
200010d0:	9c01      	ldr	r4, [sp, #4]
/home/steve/relocateBB/custom/main.c:380
                & ((flashdata[(RIOT[player0pointerhi+C_function1*2]<<8)+RIOT[player0pointerlo+C_function1*2]+i-RIOT[player0y+C_function1]])<<temp3);
200010d2:	4083      	lsls	r3, r0
/home/steve/relocateBB/custom/main.c:379
            temp2=((flashdata[(RIOT[player0pointerhi+C_function2*2]<<8)+RIOT[player0pointerlo+C_function2*2]+i-RIOT[player0y+C_function2]])<<7)
200010d4:	01e4      	lsls	r4, r4, #7
/home/steve/relocateBB/custom/main.c:382
	  if (temp2) 
200010d6:	4223      	tst	r3, r4
200010d8:	d004      	beq.n	200010e4 <main+0x2bc>
/home/steve/relocateBB/custom/main.c:384
	    C_function[3]=255;
200010da:	22ff      	movs	r2, #255	; 0xff
200010dc:	4b1e      	ldr	r3, [pc, #120]	; (20001158 <main+0x330>)
200010de:	699b      	ldr	r3, [r3, #24]
200010e0:	70da      	strb	r2, [r3, #3]
/home/steve/relocateBB/custom/main.c:385
	    return;
200010e2:	e785      	b.n	20000ff0 <main+0x1c8>
/home/steve/relocateBB/custom/main.c:371 (discriminator 2)
      for (i=RIOT[player0y+C_function2];i<RIOT[player0y+C_function2]+RIOT[player0height+C_function2];++i) 
200010e4:	3101      	adds	r1, #1
200010e6:	e7cc      	b.n	20001082 <main+0x25a>
/home/steve/relocateBB/custom/main.c:399
      my_memset(queue+get32bitdff(0),C_function1,1024);
200010e8:	2000      	movs	r0, #0
200010ea:	f7ff fe03 	bl	20000cf4 <get32bitdff>
200010ee:	2280      	movs	r2, #128	; 0x80
200010f0:	6924      	ldr	r4, [r4, #16]
200010f2:	9901      	ldr	r1, [sp, #4]
200010f4:	1820      	adds	r0, r4, r0
200010f6:	00d2      	lsls	r2, r2, #3
200010f8:	e753      	b.n	20000fa2 <main+0x17a>
/home/steve/relocateBB/custom/main.c:405 (discriminator 3)
        memscroll(queue+get32bitdff(temp3),C_function1);
200010fa:	9803      	ldr	r0, [sp, #12]
200010fc:	f7ff fdfa 	bl	20000cf4 <get32bitdff>
20001100:	6925      	ldr	r5, [r4, #16]
20001102:	9901      	ldr	r1, [sp, #4]
20001104:	1828      	adds	r0, r5, r0
20001106:	f7ff fde1 	bl	20000ccc <memscroll>
/home/steve/relocateBB/custom/main.c:404 (discriminator 3)
      for(temp3=C_function2;temp3<C_function3;temp3++)
2000110a:	9b03      	ldr	r3, [sp, #12]
2000110c:	3301      	adds	r3, #1
2000110e:	9303      	str	r3, [sp, #12]
/home/steve/relocateBB/custom/main.c:404 (discriminator 1)
20001110:	9b03      	ldr	r3, [sp, #12]
20001112:	429f      	cmp	r7, r3
20001114:	dcf1      	bgt.n	200010fa <main+0x2d2>
20001116:	e76b      	b.n	20000ff0 <main+0x1c8>
/home/steve/relocateBB/custom/main.c:425
  switch(checkswap(spritesort[temp2+1],spritesort[temp2]))
20001118:	7839      	ldrb	r1, [r7, #0]
2000111a:	7878      	ldrb	r0, [r7, #1]
2000111c:	f7ff fe12 	bl	20000d44 <checkswap>
20001120:	2801      	cmp	r0, #1
20001122:	d006      	beq.n	20001132 <main+0x30a>
20001124:	2802      	cmp	r0, #2
20001126:	d00a      	beq.n	2000113e <main+0x316>
20001128:	2800      	cmp	r0, #0
2000112a:	d1f5      	bne.n	20001118 <main+0x2f0>
2000112c:	3f01      	subs	r7, #1
2000112e:	3d01      	subs	r5, #1
20001130:	e6b1      	b.n	20000e96 <main+0x6e>
/home/steve/relocateBB/custom/main.c:428
      temp3--;
20001132:	9b02      	ldr	r3, [sp, #8]
/home/steve/relocateBB/custom/main.c:429
      shiftnumbers(temp2);
20001134:	0028      	movs	r0, r5
/home/steve/relocateBB/custom/main.c:428
      temp3--;
20001136:	3b01      	subs	r3, #1
20001138:	9302      	str	r3, [sp, #8]
/home/steve/relocateBB/custom/main.c:429
      shiftnumbers(temp2);
2000113a:	f7ff fdf3 	bl	20000d24 <shiftnumbers>
/home/steve/relocateBB/custom/main.c:439
  i=spritesort[temp2+1];
2000113e:	1963      	adds	r3, r4, r5
20001140:	3302      	adds	r3, #2
20001142:	7fda      	ldrb	r2, [r3, #31]
/home/steve/relocateBB/custom/main.c:440
  spritesort[temp2+1]=spritesort[temp2];
20001144:	7839      	ldrb	r1, [r7, #0]
20001146:	77d9      	strb	r1, [r3, #31]
/home/steve/relocateBB/custom/main.c:441
  spritesort[temp2]=i;
20001148:	703a      	strb	r2, [r7, #0]
/home/steve/relocateBB/custom/main.c:442
  temp2--;
2000114a:	e7ef      	b.n	2000112c <main+0x304>
/home/steve/relocateBB/custom/main.c:445 (discriminator 3)
    RIOT[SpriteGfxIndex+i]=myGfxIndex[i];
2000114c:	5ce1      	ldrb	r1, [r4, r3]
2000114e:	54d1      	strb	r1, [r2, r3]
/home/steve/relocateBB/custom/main.c:444 (discriminator 3)
  for (i=0;i<maxsprites;i++)
20001150:	3301      	adds	r3, #1
20001152:	e6a4      	b.n	20000e9e <main+0x76>
20001154:	20001470 	.word	0x20001470
20001158:	10001c00 	.word	0x10001c00
2000115c:	10001c30 	.word	0x10001c30
20001160:	000001ff 	.word	0x000001ff
20001164:	00000e1e 	.word	0x00000e1e
/home/steve/relocateBB/custom/main.c:471
    Gfxindex=myGfxIndex[count];
20001168:	694b      	ldr	r3, [r1, #20]
2000116a:	5ced      	ldrb	r5, [r5, r3]
/home/steve/relocateBB/custom/main.c:478
      mask = 0xFF;
2000116c:	23ff      	movs	r3, #255	; 0xff
2000116e:	600b      	str	r3, [r1, #0]
/home/steve/relocateBB/custom/main.c:479
      if (RIOT[_NUSIZ1+Gfxindex]>127)
20001170:	1963      	adds	r3, r4, r5
20001172:	0018      	movs	r0, r3
20001174:	302a      	adds	r0, #42	; 0x2a
20001176:	7802      	ldrb	r2, [r0, #0]
20001178:	7800      	ldrb	r0, [r0, #0]
2000117a:	b240      	sxtb	r0, r0
2000117c:	2800      	cmp	r0, #0
2000117e:	da0e      	bge.n	2000119e <main+0x376>
/home/steve/relocateBB/custom/main.c:481
        if (RIOT[player1x+Gfxindex]>=0x99)
20001180:	7ade      	ldrb	r6, [r3, #11]
20001182:	2e98      	cmp	r6, #152	; 0x98
20001184:	d90b      	bls.n	2000119e <main+0x376>
/home/steve/relocateBB/custom/main.c:484
           mask=maskdata[((RIOT[_NUSIZ1+Gfxindex]&64)>>3)^((RIOT[_NUSIZ1+Gfxindex]&8)<<1)|(RIOT[player1x+Gfxindex]-0x99)];
20001186:	2708      	movs	r7, #8
20001188:	10d3      	asrs	r3, r2, #3
2000118a:	403b      	ands	r3, r7
2000118c:	0052      	lsls	r2, r2, #1
2000118e:	19ff      	adds	r7, r7, r7
20001190:	403a      	ands	r2, r7
20001192:	485a      	ldr	r0, [pc, #360]	; (200012fc <main+0x4d4>)
20001194:	4313      	orrs	r3, r2
20001196:	3e99      	subs	r6, #153	; 0x99
20001198:	4333      	orrs	r3, r6
2000119a:	5cc3      	ldrb	r3, [r0, r3]
2000119c:	600b      	str	r3, [r1, #0]
/home/steve/relocateBB/custom/main.c:488
      my_memcpy(queue+get32bitdf(3),
2000119e:	2003      	movs	r0, #3
200011a0:	f7ff fdb6 	bl	20000d10 <get32bitdf>
/home/steve/relocateBB/custom/main.c:489
              flashdata+(RIOT[player1pointerhi+Gfxindex*2]<<8)+RIOT[player1pointerlo+Gfxindex*2],
200011a4:	006b      	lsls	r3, r5, #1
200011a6:	9303      	str	r3, [sp, #12]
/home/steve/relocateBB/custom/main.c:490
              RIOT[player1y+Gfxindex],
200011a8:	002b      	movs	r3, r5
200011aa:	3315      	adds	r3, #21
200011ac:	9301      	str	r3, [sp, #4]
/home/steve/relocateBB/custom/main.c:489
              flashdata+(RIOT[player1pointerhi+Gfxindex*2]<<8)+RIOT[player1pointerlo+Gfxindex*2],
200011ae:	9903      	ldr	r1, [sp, #12]
/home/steve/relocateBB/custom/main.c:488
      my_memcpy(queue+get32bitdf(3),
200011b0:	9a01      	ldr	r2, [sp, #4]
/home/steve/relocateBB/custom/main.c:491
              RIOT[player1height+Gfxindex]);
200011b2:	3521      	adds	r5, #33	; 0x21
/home/steve/relocateBB/custom/main.c:488
      my_memcpy(queue+get32bitdf(3),
200011b4:	5d63      	ldrb	r3, [r4, r5]
200011b6:	5ca2      	ldrb	r2, [r4, r2]
/home/steve/relocateBB/custom/main.c:489
              flashdata+(RIOT[player1pointerhi+Gfxindex*2]<<8)+RIOT[player1pointerlo+Gfxindex*2],
200011b8:	1864      	adds	r4, r4, r1
200011ba:	0021      	movs	r1, r4
200011bc:	313b      	adds	r1, #59	; 0x3b
200011be:	7809      	ldrb	r1, [r1, #0]
200011c0:	343a      	adds	r4, #58	; 0x3a
/home/steve/relocateBB/custom/main.c:488
      my_memcpy(queue+get32bitdf(3),
200011c2:	4f4f      	ldr	r7, [pc, #316]	; (20001300 <main+0x4d8>)
/home/steve/relocateBB/custom/main.c:489
              flashdata+(RIOT[player1pointerhi+Gfxindex*2]<<8)+RIOT[player1pointerlo+Gfxindex*2],
200011c4:	7824      	ldrb	r4, [r4, #0]
200011c6:	0209      	lsls	r1, r1, #8
/home/steve/relocateBB/custom/main.c:488
      my_memcpy(queue+get32bitdf(3),
200011c8:	693e      	ldr	r6, [r7, #16]
/home/steve/relocateBB/custom/main.c:489
              flashdata+(RIOT[player1pointerhi+Gfxindex*2]<<8)+RIOT[player1pointerlo+Gfxindex*2],
200011ca:	1909      	adds	r1, r1, r4
200011cc:	697c      	ldr	r4, [r7, #20]
/home/steve/relocateBB/custom/main.c:488
      my_memcpy(queue+get32bitdf(3),
200011ce:	1830      	adds	r0, r6, r0
/home/steve/relocateBB/custom/main.c:489
              flashdata+(RIOT[player1pointerhi+Gfxindex*2]<<8)+RIOT[player1pointerlo+Gfxindex*2],
200011d0:	1861      	adds	r1, r4, r1
/home/steve/relocateBB/custom/main.c:488
      my_memcpy(queue+get32bitdf(3),
200011d2:	f7ff fd55 	bl	20000c80 <my_memcpy>
/home/steve/relocateBB/custom/main.c:492
      mask = 0xFF;
200011d6:	23ff      	movs	r3, #255	; 0xff
200011d8:	4c4a      	ldr	r4, [pc, #296]	; (20001304 <main+0x4dc>)
/home/steve/relocateBB/custom/main.c:494
      my_memcpy(queue+get32bitdf(1),
200011da:	2001      	movs	r0, #1
/home/steve/relocateBB/custom/main.c:492
      mask = 0xFF;
200011dc:	6023      	str	r3, [r4, #0]
/home/steve/relocateBB/custom/main.c:494
      my_memcpy(queue+get32bitdf(1),
200011de:	693b      	ldr	r3, [r7, #16]
200011e0:	9304      	str	r3, [sp, #16]
200011e2:	f7ff fd95 	bl	20000d10 <get32bitdf>
/home/steve/relocateBB/custom/main.c:495
              flashdata+(RIOT[player1color+Gfxindex*2+1]<<8)+RIOT[player1color+Gfxindex*2],
200011e6:	68fe      	ldr	r6, [r7, #12]
200011e8:	9903      	ldr	r1, [sp, #12]
/home/steve/relocateBB/custom/main.c:494
      my_memcpy(queue+get32bitdf(1),
200011ea:	9a01      	ldr	r2, [sp, #4]
200011ec:	5d73      	ldrb	r3, [r6, r5]
200011ee:	5cb2      	ldrb	r2, [r6, r2]
/home/steve/relocateBB/custom/main.c:495
              flashdata+(RIOT[player1color+Gfxindex*2+1]<<8)+RIOT[player1color+Gfxindex*2],
200011f0:	1876      	adds	r6, r6, r1
200011f2:	0031      	movs	r1, r6
200011f4:	314d      	adds	r1, #77	; 0x4d
200011f6:	7809      	ldrb	r1, [r1, #0]
200011f8:	364c      	adds	r6, #76	; 0x4c
200011fa:	7836      	ldrb	r6, [r6, #0]
200011fc:	0209      	lsls	r1, r1, #8
200011fe:	198e      	adds	r6, r1, r6
20001200:	6979      	ldr	r1, [r7, #20]
20001202:	1989      	adds	r1, r1, r6
/home/steve/relocateBB/custom/main.c:494
      my_memcpy(queue+get32bitdf(1),
20001204:	9e04      	ldr	r6, [sp, #16]
20001206:	1830      	adds	r0, r6, r0
20001208:	f7ff fd3a 	bl	20000c80 <my_memcpy>
/home/steve/relocateBB/custom/main.c:499
    temp5=temp4;
2000120c:	69a3      	ldr	r3, [r4, #24]
/home/steve/relocateBB/custom/main.c:500
    temp4=(RIOT[player1y+Gfxindex]+RIOT[player1height+Gfxindex])&255; // &255 to allow for wrapped sprites 
2000120e:	9a01      	ldr	r2, [sp, #4]
/home/steve/relocateBB/custom/main.c:499
    temp5=temp4;
20001210:	60e3      	str	r3, [r4, #12]
/home/steve/relocateBB/custom/main.c:500
    temp4=(RIOT[player1y+Gfxindex]+RIOT[player1height+Gfxindex])&255; // &255 to allow for wrapped sprites 
20001212:	68fb      	ldr	r3, [r7, #12]
20001214:	5d59      	ldrb	r1, [r3, r5]
20001216:	5c9a      	ldrb	r2, [r3, r2]
/home/steve/relocateBB/custom/main.c:501
    Gfxindex=myGfxIndex[count+1];
20001218:	6965      	ldr	r5, [r4, #20]
/home/steve/relocateBB/custom/main.c:500
    temp4=(RIOT[player1y+Gfxindex]+RIOT[player1height+Gfxindex])&255; // &255 to allow for wrapped sprites 
2000121a:	1852      	adds	r2, r2, r1
2000121c:	b2d2      	uxtb	r2, r2
2000121e:	61a2      	str	r2, [r4, #24]
/home/steve/relocateBB/custom/main.c:501
    Gfxindex=myGfxIndex[count+1];
20001220:	197a      	adds	r2, r7, r5
20001222:	7856      	ldrb	r6, [r2, #1]
/home/steve/relocateBB/custom/main.c:502
    if ((count == temp3) || (RIOT[player1y+Gfxindex]>175) )
20001224:	9a02      	ldr	r2, [sp, #8]
20001226:	4295      	cmp	r5, r2
20001228:	d003      	beq.n	20001232 <main+0x40a>
/home/steve/relocateBB/custom/main.c:502 (discriminator 1)
2000122a:	199b      	adds	r3, r3, r6
2000122c:	7d5b      	ldrb	r3, [r3, #21]
2000122e:	2baf      	cmp	r3, #175	; 0xaf
20001230:	d903      	bls.n	2000123a <main+0x412>
/home/steve/relocateBB/custom/main.c:504
      temp4=511;
20001232:	4b35      	ldr	r3, [pc, #212]	; (20001308 <main+0x4e0>)
20001234:	61a3      	str	r3, [r4, #24]
/home/steve/relocateBB/custom/main.c:505
      temp5=0;
20001236:	2300      	movs	r3, #0
20001238:	60e3      	str	r3, [r4, #12]
/home/steve/relocateBB/custom/main.c:511
     queue[get32bitdf(4)+count]=(temp4-temp5-(count>>1))>>1;
2000123a:	693b      	ldr	r3, [r7, #16]
2000123c:	2004      	movs	r0, #4
2000123e:	9301      	str	r3, [sp, #4]
20001240:	f7ff fd66 	bl	20000d10 <get32bitdf>
20001244:	9b01      	ldr	r3, [sp, #4]
20001246:	1828      	adds	r0, r5, r0
20001248:	68e2      	ldr	r2, [r4, #12]
2000124a:	1818      	adds	r0, r3, r0
2000124c:	69a3      	ldr	r3, [r4, #24]
2000124e:	106d      	asrs	r5, r5, #1
20001250:	1a9b      	subs	r3, r3, r2
20001252:	1b5b      	subs	r3, r3, r5
20001254:	105b      	asrs	r3, r3, #1
20001256:	b2db      	uxtb	r3, r3
20001258:	7003      	strb	r3, [r0, #0]
/home/steve/relocateBB/custom/main.c:513
    if (RIOT[player1x+Gfxindex]>159)
2000125a:	0033      	movs	r3, r6
2000125c:	330b      	adds	r3, #11
2000125e:	9301      	str	r3, [sp, #4]
20001260:	9a01      	ldr	r2, [sp, #4]
20001262:	68fb      	ldr	r3, [r7, #12]
20001264:	1899      	adds	r1, r3, r2
20001266:	5c9b      	ldrb	r3, [r3, r2]
20001268:	2b9f      	cmp	r3, #159	; 0x9f
2000126a:	d905      	bls.n	20001278 <main+0x450>
/home/steve/relocateBB/custom/main.c:514
      RIOT[player1x+Gfxindex]-=(RIOT[player1x+Gfxindex]>208)?96:160;
2000126c:	2260      	movs	r2, #96	; 0x60
2000126e:	2bd0      	cmp	r3, #208	; 0xd0
20001270:	d800      	bhi.n	20001274 <main+0x44c>
20001272:	3240      	adds	r2, #64	; 0x40
/home/steve/relocateBB/custom/main.c:514 (discriminator 4)
20001274:	1a9b      	subs	r3, r3, r2
20001276:	700b      	strb	r3, [r1, #0]
/home/steve/relocateBB/custom/main.c:515
    queue[get32bitdff(5)+count]=RIOT[_NUSIZ1+Gfxindex];
20001278:	68fb      	ldr	r3, [r7, #12]
2000127a:	2005      	movs	r0, #5
2000127c:	362a      	adds	r6, #42	; 0x2a
2000127e:	199e      	adds	r6, r3, r6
20001280:	f7ff fd38 	bl	20000cf4 <get32bitdff>
20001284:	4c1f      	ldr	r4, [pc, #124]	; (20001304 <main+0x4dc>)
20001286:	693d      	ldr	r5, [r7, #16]
20001288:	6963      	ldr	r3, [r4, #20]
/home/steve/relocateBB/custom/main.c:516
    queue[get32bitdff(7)+count]=Hmval74(RIOT[player1x+Gfxindex]);
2000128a:	9a01      	ldr	r2, [sp, #4]
/home/steve/relocateBB/custom/main.c:515
    queue[get32bitdff(5)+count]=RIOT[_NUSIZ1+Gfxindex];
2000128c:	18c0      	adds	r0, r0, r3
2000128e:	7833      	ldrb	r3, [r6, #0]
20001290:	182d      	adds	r5, r5, r0
20001292:	702b      	strb	r3, [r5, #0]
/home/steve/relocateBB/custom/main.c:516
    queue[get32bitdff(7)+count]=Hmval74(RIOT[player1x+Gfxindex]);
20001294:	68fb      	ldr	r3, [r7, #12]
20001296:	6866      	ldr	r6, [r4, #4]
20001298:	5c9b      	ldrb	r3, [r3, r2]
2000129a:	2007      	movs	r0, #7
2000129c:	3342      	adds	r3, #66	; 0x42
2000129e:	18f6      	adds	r6, r6, r3
200012a0:	f7ff fd28 	bl	20000cf4 <get32bitdff>
200012a4:	6963      	ldr	r3, [r4, #20]
200012a6:	693d      	ldr	r5, [r7, #16]
200012a8:	18c0      	adds	r0, r0, r3
200012aa:	7833      	ldrb	r3, [r6, #0]
200012ac:	182d      	adds	r5, r5, r0
200012ae:	702b      	strb	r3, [r5, #0]
/home/steve/relocateBB/custom/main.c:518
    queue[get32bitdf(5)+count]=kernello(HMdiv[RIOT[player1x+Gfxindex]]);
200012b0:	68fb      	ldr	r3, [r7, #12]
200012b2:	9a01      	ldr	r2, [sp, #4]
200012b4:	4d15      	ldr	r5, [pc, #84]	; (2000130c <main+0x4e4>)
200012b6:	5c9b      	ldrb	r3, [r3, r2]
200012b8:	6862      	ldr	r2, [r4, #4]
200012ba:	5d5b      	ldrb	r3, [r3, r5]
200012bc:	2005      	movs	r0, #5
200012be:	18d3      	adds	r3, r2, r3
200012c0:	9303      	str	r3, [sp, #12]
200012c2:	f7ff fd25 	bl	20000d10 <get32bitdf>
200012c6:	6963      	ldr	r3, [r4, #20]
200012c8:	693e      	ldr	r6, [r7, #16]
200012ca:	18c0      	adds	r0, r0, r3
200012cc:	9b03      	ldr	r3, [sp, #12]
200012ce:	1836      	adds	r6, r6, r0
200012d0:	781b      	ldrb	r3, [r3, #0]
/home/steve/relocateBB/custom/main.c:520
    queue[get32bitdf(6)+count]=kernelhi(HMdiv[RIOT[player1x+Gfxindex]]);
200012d2:	9a01      	ldr	r2, [sp, #4]
/home/steve/relocateBB/custom/main.c:518
    queue[get32bitdf(5)+count]=kernello(HMdiv[RIOT[player1x+Gfxindex]]);
200012d4:	7033      	strb	r3, [r6, #0]
/home/steve/relocateBB/custom/main.c:520
    queue[get32bitdf(6)+count]=kernelhi(HMdiv[RIOT[player1x+Gfxindex]]);
200012d6:	68fb      	ldr	r3, [r7, #12]
200012d8:	2006      	movs	r0, #6
200012da:	5c9b      	ldrb	r3, [r3, r2]
200012dc:	693e      	ldr	r6, [r7, #16]
200012de:	5d5b      	ldrb	r3, [r3, r5]
200012e0:	6865      	ldr	r5, [r4, #4]
200012e2:	330b      	adds	r3, #11
200012e4:	18ed      	adds	r5, r5, r3
200012e6:	f7ff fd13 	bl	20000d10 <get32bitdf>
200012ea:	6963      	ldr	r3, [r4, #20]
200012ec:	18c0      	adds	r0, r0, r3
200012ee:	782b      	ldrb	r3, [r5, #0]
200012f0:	1836      	adds	r6, r6, r0
200012f2:	7033      	strb	r3, [r6, #0]
/home/steve/relocateBB/custom/main.c:521
    count++;
200012f4:	6963      	ldr	r3, [r4, #20]
200012f6:	3301      	adds	r3, #1
200012f8:	6163      	str	r3, [r4, #20]
200012fa:	e61f      	b.n	20000f3c <main+0x114>
200012fc:	20001450 	.word	0x20001450
20001300:	10001c00 	.word	0x10001c00
20001304:	10001c30 	.word	0x10001c30
20001308:	000001ff 	.word	0x000001ff
2000130c:	20001c00 	.word	0x20001c00

20001310 <memmove>:
memmove():
20001310:	b5f0      	push	{r4, r5, r6, r7, lr}
20001312:	4288      	cmp	r0, r1
20001314:	d90a      	bls.n	2000132c <memmove+0x1c>
20001316:	188b      	adds	r3, r1, r2
20001318:	4298      	cmp	r0, r3
2000131a:	d207      	bcs.n	2000132c <memmove+0x1c>
2000131c:	1e53      	subs	r3, r2, #1
2000131e:	2a00      	cmp	r2, #0
20001320:	d003      	beq.n	2000132a <memmove+0x1a>
20001322:	5cca      	ldrb	r2, [r1, r3]
20001324:	54c2      	strb	r2, [r0, r3]
20001326:	3b01      	subs	r3, #1
20001328:	d2fb      	bcs.n	20001322 <memmove+0x12>
2000132a:	bdf0      	pop	{r4, r5, r6, r7, pc}
2000132c:	0005      	movs	r5, r0
2000132e:	2a0f      	cmp	r2, #15
20001330:	d80a      	bhi.n	20001348 <memmove+0x38>
20001332:	1e56      	subs	r6, r2, #1
20001334:	2a00      	cmp	r2, #0
20001336:	d0f8      	beq.n	2000132a <memmove+0x1a>
20001338:	2300      	movs	r3, #0
2000133a:	5ccc      	ldrb	r4, [r1, r3]
2000133c:	001a      	movs	r2, r3
2000133e:	54ec      	strb	r4, [r5, r3]
20001340:	3301      	adds	r3, #1
20001342:	4296      	cmp	r6, r2
20001344:	d1f9      	bne.n	2000133a <memmove+0x2a>
20001346:	e7f0      	b.n	2000132a <memmove+0x1a>
20001348:	2403      	movs	r4, #3
2000134a:	0003      	movs	r3, r0
2000134c:	0026      	movs	r6, r4
2000134e:	430b      	orrs	r3, r1
20001350:	401e      	ands	r6, r3
20001352:	421c      	tst	r4, r3
20001354:	d130      	bne.n	200013b8 <memmove+0xa8>
20001356:	0015      	movs	r5, r2
20001358:	3d10      	subs	r5, #16
2000135a:	092d      	lsrs	r5, r5, #4
2000135c:	0003      	movs	r3, r0
2000135e:	000c      	movs	r4, r1
20001360:	46ac      	mov	ip, r5
20001362:	012f      	lsls	r7, r5, #4
20001364:	183f      	adds	r7, r7, r0
20001366:	6825      	ldr	r5, [r4, #0]
20001368:	601d      	str	r5, [r3, #0]
2000136a:	6865      	ldr	r5, [r4, #4]
2000136c:	605d      	str	r5, [r3, #4]
2000136e:	68a5      	ldr	r5, [r4, #8]
20001370:	609d      	str	r5, [r3, #8]
20001372:	68e5      	ldr	r5, [r4, #12]
20001374:	3410      	adds	r4, #16
20001376:	60dd      	str	r5, [r3, #12]
20001378:	001d      	movs	r5, r3
2000137a:	3310      	adds	r3, #16
2000137c:	42bd      	cmp	r5, r7
2000137e:	d1f2      	bne.n	20001366 <memmove+0x56>
20001380:	4665      	mov	r5, ip
20001382:	230f      	movs	r3, #15
20001384:	240c      	movs	r4, #12
20001386:	3501      	adds	r5, #1
20001388:	012d      	lsls	r5, r5, #4
2000138a:	1949      	adds	r1, r1, r5
2000138c:	4013      	ands	r3, r2
2000138e:	1945      	adds	r5, r0, r5
20001390:	4214      	tst	r4, r2
20001392:	d013      	beq.n	200013bc <memmove+0xac>
20001394:	598c      	ldr	r4, [r1, r6]
20001396:	51ac      	str	r4, [r5, r6]
20001398:	3604      	adds	r6, #4
2000139a:	1b9c      	subs	r4, r3, r6
2000139c:	2c03      	cmp	r4, #3
2000139e:	d8f9      	bhi.n	20001394 <memmove+0x84>
200013a0:	3b04      	subs	r3, #4
200013a2:	089b      	lsrs	r3, r3, #2
200013a4:	3301      	adds	r3, #1
200013a6:	009b      	lsls	r3, r3, #2
200013a8:	18ed      	adds	r5, r5, r3
200013aa:	18c9      	adds	r1, r1, r3
200013ac:	2303      	movs	r3, #3
200013ae:	401a      	ands	r2, r3
200013b0:	1e56      	subs	r6, r2, #1
200013b2:	2a00      	cmp	r2, #0
200013b4:	d1c0      	bne.n	20001338 <memmove+0x28>
200013b6:	e7b8      	b.n	2000132a <memmove+0x1a>
200013b8:	1e56      	subs	r6, r2, #1
200013ba:	e7bd      	b.n	20001338 <memmove+0x28>
200013bc:	001a      	movs	r2, r3
200013be:	e7b8      	b.n	20001332 <memmove+0x22>

200013c0 <memcpy>:
memcpy():
200013c0:	b5f0      	push	{r4, r5, r6, r7, lr}
200013c2:	0005      	movs	r5, r0
200013c4:	2a0f      	cmp	r2, #15
200013c6:	d933      	bls.n	20001430 <memcpy+0x70>
200013c8:	2403      	movs	r4, #3
200013ca:	0003      	movs	r3, r0
200013cc:	0026      	movs	r6, r4
200013ce:	430b      	orrs	r3, r1
200013d0:	401e      	ands	r6, r3
200013d2:	421c      	tst	r4, r3
200013d4:	d137      	bne.n	20001446 <memcpy+0x86>
200013d6:	0015      	movs	r5, r2
200013d8:	3d10      	subs	r5, #16
200013da:	092d      	lsrs	r5, r5, #4
200013dc:	0003      	movs	r3, r0
200013de:	000c      	movs	r4, r1
200013e0:	46ac      	mov	ip, r5
200013e2:	012f      	lsls	r7, r5, #4
200013e4:	183f      	adds	r7, r7, r0
200013e6:	6865      	ldr	r5, [r4, #4]
200013e8:	605d      	str	r5, [r3, #4]
200013ea:	68a5      	ldr	r5, [r4, #8]
200013ec:	609d      	str	r5, [r3, #8]
200013ee:	68e5      	ldr	r5, [r4, #12]
200013f0:	60dd      	str	r5, [r3, #12]
200013f2:	6825      	ldr	r5, [r4, #0]
200013f4:	3410      	adds	r4, #16
200013f6:	601d      	str	r5, [r3, #0]
200013f8:	001d      	movs	r5, r3
200013fa:	3310      	adds	r3, #16
200013fc:	42bd      	cmp	r5, r7
200013fe:	d1f2      	bne.n	200013e6 <memcpy+0x26>
20001400:	4665      	mov	r5, ip
20001402:	230f      	movs	r3, #15
20001404:	240c      	movs	r4, #12
20001406:	3501      	adds	r5, #1
20001408:	012d      	lsls	r5, r5, #4
2000140a:	1949      	adds	r1, r1, r5
2000140c:	4013      	ands	r3, r2
2000140e:	1945      	adds	r5, r0, r5
20001410:	4214      	tst	r4, r2
20001412:	d01a      	beq.n	2000144a <memcpy+0x8a>
20001414:	598c      	ldr	r4, [r1, r6]
20001416:	51ac      	str	r4, [r5, r6]
20001418:	3604      	adds	r6, #4
2000141a:	1b9c      	subs	r4, r3, r6
2000141c:	2c03      	cmp	r4, #3
2000141e:	d8f9      	bhi.n	20001414 <memcpy+0x54>
20001420:	3b04      	subs	r3, #4
20001422:	089b      	lsrs	r3, r3, #2
20001424:	3301      	adds	r3, #1
20001426:	009b      	lsls	r3, r3, #2
20001428:	18ed      	adds	r5, r5, r3
2000142a:	18c9      	adds	r1, r1, r3
2000142c:	2303      	movs	r3, #3
2000142e:	401a      	ands	r2, r3
20001430:	1e56      	subs	r6, r2, #1
20001432:	2a00      	cmp	r2, #0
20001434:	d006      	beq.n	20001444 <memcpy+0x84>
20001436:	2300      	movs	r3, #0
20001438:	5ccc      	ldrb	r4, [r1, r3]
2000143a:	001a      	movs	r2, r3
2000143c:	54ec      	strb	r4, [r5, r3]
2000143e:	3301      	adds	r3, #1
20001440:	4296      	cmp	r6, r2
20001442:	d1f9      	bne.n	20001438 <memcpy+0x78>
20001444:	bdf0      	pop	{r4, r5, r6, r7, pc}
20001446:	1e56      	subs	r6, r2, #1
20001448:	e7f5      	b.n	20001436 <memcpy+0x76>
2000144a:	001a      	movs	r2, r3
2000144c:	e7f0      	b.n	20001430 <memcpy+0x70>
2000144e:	46c0      	nop			; (mov r8, r8)

20001450 <maskdata>:
20001450:	0100 0703 1f0f 7f3f fcfe f0f8 c0e0 0080     ......?.........
20001460:	8000 e0c0 f8f0 fefc 3f7f 0f1f 0307 0001     .........?......
20001470:	4080 1020 0408 0102 0201 0804 2010 8040     .@ .......... @.
20001480:	4080 1020 0408 0102 0201 0804 2010 8040     .@ .......... @.
20001490:	0000 0000                                   ....
